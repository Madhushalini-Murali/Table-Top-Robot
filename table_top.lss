
table_top.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000184  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000001d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  000001f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000344  00000000  00000000  00000213  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000f5  00000000  00000000  00000557  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000031c  00000000  00000000  0000064c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000968  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000c4  00000000  00000000  00000988  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000460  00000000  00000000  00000a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000090  00000000  00000000  00000eac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 c0 00 	jmp	0x180	; 0x180 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include<avr/io.h>
#include<util/delay.h>
void main()
{
  6c:	0f 93       	push	r16
  6e:	1f 93       	push	r17
	DDRD=0b00000000;
  70:	11 ba       	out	0x11, r1	; 17
	DDRB=0b11111111;
  72:	8f ef       	ldi	r24, 0xFF	; 255
  74:	87 bb       	out	0x17, r24	; 23
	PORTD=0b11111111;
  76:	82 bb       	out	0x12, r24	; 18
	int c;
	while(1)
	{
		c=PIND;
		if(c==0b11110000)
			PORTB=0b00001010;
  78:	1a e0       	ldi	r17, 0x0A	; 10
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  7a:	69 e1       	ldi	r22, 0x19	; 25
  7c:	70 e0       	ldi	r23, 0x00	; 0
		
		if(c==0b11110010)
		{
			PORTB=0b00001010;
			_delay_ms(300);
			PORTB=0b00001001;
  7e:	a9 e0       	ldi	r26, 0x09	; 9
  80:	40 e5       	ldi	r20, 0x50	; 80
  82:	53 ec       	ldi	r21, 0xC3	; 195
			_delay_ms(200);
		}
		
		if(c==0b11110100)
		{
			PORTB=0b00000101;
  84:	05 e0       	ldi	r16, 0x05	; 5
			_delay_ms(300);
			PORTB=0b00000110;
  86:	b6 e0       	ldi	r27, 0x06	; 6
	DDRB=0b11111111;
	PORTD=0b11111111;
	int c;
	while(1)
	{
		c=PIND;
  88:	80 b3       	in	r24, 0x10	; 16
  8a:	90 e0       	ldi	r25, 0x00	; 0
		if(c==0b11110000)
  8c:	80 3f       	cpi	r24, 0xF0	; 240
  8e:	91 05       	cpc	r25, r1
  90:	11 f4       	brne	.+4      	; 0x96 <main+0x2a>
			PORTB=0b00001010;
  92:	18 bb       	out	0x18, r17	; 24
  94:	33 c0       	rjmp	.+102    	; 0xfc <main+0x90>
			
		if(c==0b11111000)
  96:	88 3f       	cpi	r24, 0xF8	; 248
  98:	91 05       	cpc	r25, r1
  9a:	71 f4       	brne	.+28     	; 0xb8 <main+0x4c>
		{
			PORTB=0b00000101;
  9c:	08 bb       	out	0x18, r16	; 24
  9e:	28 eb       	ldi	r18, 0xB8	; 184
  a0:	3b e0       	ldi	r19, 0x0B	; 11
  a2:	fb 01       	movw	r30, r22
  a4:	31 97       	sbiw	r30, 0x01	; 1
  a6:	f1 f7       	brne	.-4      	; 0xa4 <main+0x38>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  a8:	21 50       	subi	r18, 0x01	; 1
  aa:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  ac:	d1 f7       	brne	.-12     	; 0xa2 <main+0x36>
			_delay_ms(300);
			PORTB=0b00001001;
  ae:	a8 bb       	out	0x18, r26	; 24
  b0:	fa 01       	movw	r30, r20
  b2:	31 97       	sbiw	r30, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <main+0x46>
  b6:	33 c0       	rjmp	.+102    	; 0x11e <main+0xb2>
			_delay_ms(200);
		}
		
		if(c==0b11110100)
  b8:	84 3f       	cpi	r24, 0xF4	; 244
  ba:	91 05       	cpc	r25, r1
  bc:	71 f4       	brne	.+28     	; 0xda <main+0x6e>
		{
			PORTB=0b00000101;
  be:	08 bb       	out	0x18, r16	; 24
  c0:	28 eb       	ldi	r18, 0xB8	; 184
  c2:	3b e0       	ldi	r19, 0x0B	; 11
  c4:	fb 01       	movw	r30, r22
  c6:	31 97       	sbiw	r30, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <main+0x5a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  ca:	21 50       	subi	r18, 0x01	; 1
  cc:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  ce:	d1 f7       	brne	.-12     	; 0xc4 <main+0x58>
			_delay_ms(300);
			PORTB=0b00000110;
  d0:	b8 bb       	out	0x18, r27	; 24
  d2:	fa 01       	movw	r30, r20
  d4:	31 97       	sbiw	r30, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <main+0x68>
  d8:	33 c0       	rjmp	.+102    	; 0x140 <main+0xd4>
			_delay_ms(200);
		}
		
		if(c==0b11110010)
  da:	82 3f       	cpi	r24, 0xF2	; 242
  dc:	91 05       	cpc	r25, r1
  de:	71 f4       	brne	.+28     	; 0xfc <main+0x90>
		{
			PORTB=0b00001010;
  e0:	18 bb       	out	0x18, r17	; 24
  e2:	28 eb       	ldi	r18, 0xB8	; 184
  e4:	3b e0       	ldi	r19, 0x0B	; 11
  e6:	fb 01       	movw	r30, r22
  e8:	31 97       	sbiw	r30, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <main+0x7c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  ec:	21 50       	subi	r18, 0x01	; 1
  ee:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  f0:	d1 f7       	brne	.-12     	; 0xe6 <main+0x7a>
			_delay_ms(300);
			PORTB=0b00001001;
  f2:	a8 bb       	out	0x18, r26	; 24
  f4:	fa 01       	movw	r30, r20
  f6:	31 97       	sbiw	r30, 0x01	; 1
  f8:	f1 f7       	brne	.-4      	; 0xf6 <main+0x8a>
  fa:	27 c0       	rjmp	.+78     	; 0x14a <main+0xde>
			_delay_ms(200);
		}
		if(c==0b11110001)
  fc:	81 3f       	cpi	r24, 0xF1	; 241
  fe:	91 05       	cpc	r25, r1
 100:	71 f4       	brne	.+28     	; 0x11e <main+0xb2>
		{
			PORTB=0b00001010;
 102:	18 bb       	out	0x18, r17	; 24
 104:	28 eb       	ldi	r18, 0xB8	; 184
 106:	3b e0       	ldi	r19, 0x0B	; 11
 108:	fb 01       	movw	r30, r22
 10a:	31 97       	sbiw	r30, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <main+0x9e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 10e:	21 50       	subi	r18, 0x01	; 1
 110:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 112:	d1 f7       	brne	.-12     	; 0x108 <main+0x9c>
			_delay_ms(300);
			PORTB=0b00000110;
 114:	b8 bb       	out	0x18, r27	; 24
 116:	fa 01       	movw	r30, r20
 118:	31 97       	sbiw	r30, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <main+0xac>
 11c:	1b c0       	rjmp	.+54     	; 0x154 <main+0xe8>
			_delay_ms(200);
		}
		if(c==0b11111100)
 11e:	8c 3f       	cpi	r24, 0xFC	; 252
 120:	91 05       	cpc	r25, r1
 122:	71 f4       	brne	.+28     	; 0x140 <main+0xd4>
		{
			PORTB=0b00000101;
 124:	08 bb       	out	0x18, r16	; 24
 126:	28 eb       	ldi	r18, 0xB8	; 184
 128:	3b e0       	ldi	r19, 0x0B	; 11
 12a:	fb 01       	movw	r30, r22
 12c:	31 97       	sbiw	r30, 0x01	; 1
 12e:	f1 f7       	brne	.-4      	; 0x12c <main+0xc0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 130:	21 50       	subi	r18, 0x01	; 1
 132:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 134:	d1 f7       	brne	.-12     	; 0x12a <main+0xbe>
			_delay_ms(300);
			PORTB=0b00001001;
 136:	a8 bb       	out	0x18, r26	; 24
 138:	fa 01       	movw	r30, r20
 13a:	31 97       	sbiw	r30, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <main+0xce>
 13e:	0f c0       	rjmp	.+30     	; 0x15e <main+0xf2>
			_delay_ms(200);
		}
		if(c==0b11111001)
 140:	89 3f       	cpi	r24, 0xF9	; 249
 142:	91 05       	cpc	r25, r1
 144:	11 f4       	brne	.+4      	; 0x14a <main+0xde>
		{
			PORTB=0b00001001;
 146:	a8 bb       	out	0x18, r26	; 24
 148:	0d c0       	rjmp	.+26     	; 0x164 <main+0xf8>
		
		}
		if(c==0b11110011)
 14a:	83 3f       	cpi	r24, 0xF3	; 243
 14c:	91 05       	cpc	r25, r1
 14e:	11 f4       	brne	.+4      	; 0x154 <main+0xe8>
		{
			PORTB=0b00001010;
 150:	18 bb       	out	0x18, r17	; 24
 152:	0d c0       	rjmp	.+26     	; 0x16e <main+0x102>
		}
		if(c==0b11110110)
 154:	86 3f       	cpi	r24, 0xF6	; 246
 156:	91 05       	cpc	r25, r1
 158:	11 f4       	brne	.+4      	; 0x15e <main+0xf2>
		{
			PORTB=0b00000110;
 15a:	b8 bb       	out	0x18, r27	; 24
 15c:	0b c0       	rjmp	.+22     	; 0x174 <main+0x108>
			
		}
		if(c==0b11111110)
 15e:	8e 3f       	cpi	r24, 0xFE	; 254
 160:	91 05       	cpc	r25, r1
 162:	19 f0       	breq	.+6      	; 0x16a <main+0xfe>
		{
			PORTB=0b00000110;
			
		}
		if(c==0b11110111)
 164:	87 3f       	cpi	r24, 0xF7	; 247
 166:	91 05       	cpc	r25, r1
 168:	11 f4       	brne	.+4      	; 0x16e <main+0x102>
		{
			PORTB=0b00000110;
 16a:	b8 bb       	out	0x18, r27	; 24
 16c:	8d cf       	rjmp	.-230    	; 0x88 <main+0x1c>
		}
		if(c==0b11111011)
 16e:	8b 3f       	cpi	r24, 0xFB	; 251
 170:	91 05       	cpc	r25, r1
 172:	21 f0       	breq	.+8      	; 0x17c <main+0x110>
		{
			PORTB=0b00001001;
		
		}
		if(c==0b11111101)
 174:	8d 3f       	cpi	r24, 0xFD	; 253
 176:	91 05       	cpc	r25, r1
 178:	09 f0       	breq	.+2      	; 0x17c <main+0x110>
 17a:	86 cf       	rjmp	.-244    	; 0x88 <main+0x1c>
		{
			PORTB=0b00001001;
 17c:	a8 bb       	out	0x18, r26	; 24
 17e:	84 cf       	rjmp	.-248    	; 0x88 <main+0x1c>

00000180 <_exit>:
 180:	f8 94       	cli

00000182 <__stop_program>:
 182:	ff cf       	rjmp	.-2      	; 0x182 <__stop_program>
